// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider             = "mysql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.text annotations in model Account below
  // Further reading: 
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

// enum PostCategory {
//   featured
//   latest
//   popular
// }

// enum CharityCategory {
//   featured
//   latest
//   popular
// }

enum JobLocation {
  remote
  local
}

model User {
  id    String @id @default(uuid())
  name  String @unique
  email String @unique
  posts Post[]
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  image     String   @db.Text
  excerpt   String   @db.Text
  content   String   @db.LongText
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@fulltext([title])
}

model Charity {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  website   String?  @unique
  about     String?
  location  String?
  rating    Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  careers   Job[]
}

model Job {
  id          Int         @id @default(autoincrement())
  title       String      @db.VarChar(255)
  description String?
  location    JobLocation
  charity     Charity     @relation(fields: [charityId], references: [id])
  charityId   Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

// model StaticInfo {
//   id        Int      @id @default(autoincrement())
//   title     String   @db.VarChar(255)
//   content   String?
// }
